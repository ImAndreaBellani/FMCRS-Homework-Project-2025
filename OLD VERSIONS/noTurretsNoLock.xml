<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>typedef struct {
    int x;
    int y;
} Cell;

typedef struct {
    int speed;
    int health;
    int damage;
} EnemyConfiguration;

typedef struct {
    int health;
} MainTowerConfiguration;

const int MAX_ENEMIES := 4;
int countEnemies=MAX_ENEMIES;
const EnemyConfiguration SQUARE := {2, 10, 2};
const EnemyConfiguration CIRCLE := {2, 20, 10};

const MainTowerConfiguration MT := {300};

const Cell TURRET0_POS = {2,3};

Cell MAIN_POS = {15,4};

Cell ENEMIES_PATH1[12] = {{0,0},{0,1},{0,2},{0,3},{0,4},{1,4},{2,4},{3,4},{4,4},{5,4},{6,4},{7,4}};
Cell ENEMIES_PATH2[6] = {{7,5},{7,6},{7,7},{8,7},{9,7},{10,7}};
Cell ENEMIES_PATH3[8] = {{11,7},{12,7},{13,7},{14,7},{15,7},{15,6},{15,5},{15,4}};
Cell ENEMIES_PATH4[8] = {{10,6},{10,5},{10,4},{11,4},{12,4},{13,4},{14,4},{15,4}};
Cell ENEMIES_PATH5[14] = {{7,3},{7,2},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{15,2},{15,3},{15,4}};

typedef struct {
    Cell pos;
    int lifeTime;
    bool kind;
    int DAMAGE_TO_ENEMY;
} EnemyRecord;

EnemyRecord SHOOT_TABLE[MAX_ENEMIES];

int DAMAGE_TO_MT;

urgent chan STMT; //"SHOOT TO MAIN TOWER"

broadcast chan ENEMY_SYNC;</declaration>
	<template>
		<name>turret</name>
		<parameter>int id, Cell pos, int range, int speed, int damage</parameter>
		<declaration>
int max (int v1, int v2)
    {
        if (v1 &gt;= v2)
            return (v1);
        else
            return (v2);
    }
int dist(Cell c1, Cell c2)
    {
        return (max(abs(c1.x - c2.x), abs(c1.y - c2.y)));
    }
void shoot()
    {
        int k, i, app[MAX_ENEMIES], appLen = 0, maxLife, lifeLen = 0;
        for (k = 1 ; k&lt;=range ; k++)
            {
                for (i = 0 ; i &lt; MAX_ENEMIES ; i++)
                    {
                        if (dist(SHOOT_TABLE[i].pos, pos) == k)
                            {
                                app[appLen] = i;
                                appLen++;
                            }
                    }
                if (appLen &gt; 0)
                    {
                        maxLife = SHOOT_TABLE[app[0]].lifeTime;
                        lifeLen = 1;
                        for (i = 1 ; i &lt; appLen ; i++)
                            {
                                if (SHOOT_TABLE[app[i]].lifeTime &gt; maxLife)
                                    {
                                        maxLife = SHOOT_TABLE[app[i]].lifeTime;
                                        lifeLen=1;
                                    }
                                else
                                    {
                                        if (SHOOT_TABLE[app[i]].lifeTime == maxLife)
                                            {
                                                lifeLen++;
                                                app[1] = app[i];
                                            }
                                    }
                            }
                        lifeLen--;
                        for (i = 0 ; i &lt; lifeLen ; i++)
                            {
                                if (SHOOT_TABLE[app[i]].kind)
                                    {
                                        SHOOT_TABLE[app[i]].DAMAGE_TO_ENEMY = damage;
                                        return;
                                    }
                            }
                        SHOOT_TABLE[app[i]].DAMAGE_TO_ENEMY = damage;
                        return;
                    }
            }   
    }




</declaration>
		<location id="id0" x="-340" y="-238">
		</location>
		<init ref="id0"/>
		<transition id="id1">
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-545" y="-221">ENEMY_SYNC?</label>
			<label kind="assignment" x="-518" y="-204">shoot()</label>
			<nail x="-477" y="-238"/>
			<nail x="-400" y="-170"/>
		</transition>
	</template>
	<template>
		<name>enemySync</name>
		<location id="id2" x="-170" y="-110">
		</location>
		<init ref="id2"/>
		<transition id="id3">
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="-110" y="-110">countEnemies&gt;0</label>
			<label kind="synchronisation" x="-102" y="-93">ENEMY_SYNC!</label>
			<nail x="-110" y="-119"/>
			<nail x="-136" y="-68"/>
			<nail x="-161" y="-59"/>
		</transition>
	</template>
	<template>
		<name>enemy</name>
		<parameter>const int id, int speed, int health, int damage, bool kind</parameter>
		<declaration>const Cell START_POS := {0,0};

int c1 := 0; 
Cell pos := START_POS;
int current_index := 1;
int current_path := 1;

/*
    problemi rimasti:
    -&gt; STMT non sincronizzato con ENEMY_SYNC;
    -&gt; alcune volte si cambia la pos. senza aspettare il delay (probabilmente si sovrappongono le guard)
    -&gt; modellare quando un enemy "muore"
*/

void updateRecord ()
    {
        health = health - SHOOT_TABLE[id].DAMAGE_TO_ENEMY; //và inizializzata
        SHOOT_TABLE[id].DAMAGE_TO_ENEMY = 0;
        SHOOT_TABLE[id].pos = pos;
        SHOOT_TABLE[id].lifeTime++; //và inizializzata!
    }
void changePath(int i)
    {
        current_index = 0;
        current_path = i;
    }
void next()
    {
        if (current_path == 1)
            {
                pos = ENEMIES_PATH1[current_index];
            }
        if(current_path == 2)
            {
                pos = ENEMIES_PATH2[current_index];
            }
        if (current_path == 3)
            {
                pos = ENEMIES_PATH3[current_index];
            }
        if (current_path == 4)
            {
                pos = ENEMIES_PATH4[current_index];
            }
        if (current_path == 5)
            {
                pos = ENEMIES_PATH5[current_index];
            }

        current_index++;
        c1=0;
    }</declaration>
		<location id="id4" x="-493" y="-85" color="#00ff00">
		</location>
		<location id="id5" x="-493" y="85">
		</location>
		<location id="id6" x="-493" y="-272">
		</location>
		<location id="id7" x="42" y="-136">
		</location>
		<location id="id8" x="42" y="-272">
		</location>
		<location id="id9" x="-246" y="-136">
		</location>
		<init ref="id4"/>
		<transition id="id10">
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-331" y="-68">c1&gt;=speed &amp;&amp; pos != ENEMIES_PATH4[7]</label>
			<label kind="synchronisation" x="-280" y="-85">ENEMY_SYNC?</label>
			<label kind="assignment" x="-272" y="-51">next()</label>
			<nail x="-280" y="-85"/>
			<nail x="-238" y="-93"/>
		</transition>
		<transition id="id11">
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-229" y="-170">c1&lt;speed</label>
			<label kind="synchronisation" x="-238" y="-187">ENEMY_SYNC?</label>
			<label kind="assignment" x="-221" y="-153">c1=c1+1</label>
			<nail x="-280" y="-178"/>
			<nail x="-221" y="-170"/>
			<nail x="-221" y="-153"/>
		</transition>
		<transition id="id12">
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="guard" x="102" y="-280">c1&gt;=speed &amp;&amp; pos != ENEMIES_PATH3[7]</label>
			<label kind="synchronisation" x="102" y="-297">ENEMY_SYNC?</label>
			<label kind="assignment" x="102" y="-263">next(),updateRecord()</label>
			<nail x="93" y="-284"/>
			<nail x="93" y="-242"/>
		</transition>
		<transition id="id13">
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="guard" x="8" y="-340">c1&lt;speed</label>
			<label kind="synchronisation" x="-8" y="-357">ENEMY_SYNC?</label>
			<label kind="assignment" x="8" y="-323">c1=c1+1,updateRecord()</label>
			<nail x="17" y="-306"/>
			<nail x="76" y="-306"/>
		</transition>
		<transition id="id14">
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="-60" y="-212">pos == MAIN_POS &amp;&amp; c1&gt;=speed</label>
			<label kind="synchronisation" x="8" y="-229">ENEMY_SYNC?</label>
			<label kind="assignment" x="-8" y="-195">countEnemies--</label>
		</transition>
		<transition id="id15">
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="guard" x="-212" y="-119">pos == MAIN_POS &amp;&amp; c1&gt;=speed</label>
			<label kind="synchronisation" x="-153" y="-136">ENEMY_SYNC?</label>
			<label kind="assignment" x="-161" y="-102">countEnemies--</label>
		</transition>
		<transition id="id16">
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-493" y="-365">c1&lt;speed</label>
			<label kind="synchronisation" x="-493" y="-382">ENEMY_SYNC?</label>
			<label kind="assignment" x="-493" y="-348">c1=c1+1,updateRecord()</label>
			<nail x="-416" y="-314"/>
			<nail x="-467" y="-323"/>
		</transition>
		<transition id="id17">
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-884" y="-272">c1&gt;=speed &amp;&amp; pos != ENEMIES_PATH2[5]</label>
			<label kind="synchronisation" x="-671" y="-289">ENEMY_SYNC?</label>
			<label kind="assignment" x="-739" y="-255">next(),updateRecord()</label>
			<nail x="-535" y="-246"/>
			<nail x="-578" y="-280"/>
		</transition>
		<transition id="id18">
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-459" y="110">c1&lt;speed</label>
			<label kind="synchronisation" x="-467" y="93">ENEMY_SYNC?</label>
			<label kind="assignment" x="-467" y="127">c1=c1+1</label>
			<nail x="-459" y="119"/>
			<nail x="-501" y="127"/>
		</transition>
		<transition id="id19">
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-875" y="102">c1&gt;=speed &amp;&amp; pos != ENEMIES_PATH5[13]</label>
			<label kind="synchronisation" x="-654" y="85">ENEMY_SYNC?</label>
			<label kind="assignment" x="-697" y="119">next()</label>
			<nail x="-552" y="85"/>
			<nail x="-544" y="119"/>
			<nail x="-527" y="119"/>
		</transition>
		<transition id="id20">
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="guard" x="-314" y="59">pos == MAIN_POS &amp;&amp; c1&gt;=speed</label>
			<label kind="synchronisation" x="-229" y="42">ENEMY_SYNC?</label>
			<label kind="assignment" x="-246" y="85">countEnemies--</label>
			<nail x="42" y="85"/>
			<nail x="42" y="-17"/>
			<nail x="42" y="-68"/>
		</transition>
		<transition id="id21">
			<source ref="id6"/>
			<target ref="id9"/>
			<label kind="guard" x="-425" y="-221">pos == ENEMIES_PATH2[5]</label>
			<label kind="synchronisation" x="-374" y="-238">ENEMY_SYNC?</label>
			<label kind="assignment" x="-416" y="-204">changePath(4),next()</label>
		</transition>
		<transition id="id22">
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="guard" x="-340" y="-289">pos == ENEMIES_PATH2[5]</label>
			<label kind="synchronisation" x="-306" y="-306">ENEMY_SYNC?</label>
			<label kind="assignment" x="-340" y="-272">changePath(3),next(),updateRecord()</label>
			<nail x="-229" y="-272"/>
		</transition>
		<transition id="id23">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-646" y="-17">pos == ENEMIES_PATH1[11] &amp;&amp; c1&gt;=speed</label>
			<label kind="synchronisation" x="-535" y="-34">ENEMY_SYNC?</label>
			<label kind="assignment" x="-569" y="0">changePath(5),next()</label>
		</transition>
		<transition id="id24">
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="-569" y="-170">pos == ENEMIES_PATH1[11]</label>
			<label kind="synchronisation" x="-535" y="-187">ENEMY_SYNC?</label>
			<label kind="assignment" x="-561" y="-153">changePath(2),next(),updateRecord()</label>
		</transition>
		<transition id="id25">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="-425" y="-93">c1&lt;speed</label>
			<label kind="synchronisation" x="-433" y="-110">ENEMY_SYNC?</label>
			<label kind="assignment" x="-416" y="-76">c1=c1+1,updateRecord()</label>
			<nail x="-442" y="-68"/>
			<nail x="-433" y="-127"/>
		</transition>
		<transition id="id26">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="-858" y="-93">c1&gt;=speed &amp;&amp; pos != ENEMIES_PATH1[11]</label>
			<label kind="synchronisation" x="-646" y="-110">ENEMY_SYNC?</label>
			<label kind="assignment" x="-654" y="-76">next(),updateRecord()</label>
			<nail x="-535" y="-68"/>
			<nail x="-552" y="-127"/>
		</transition>
		<transition id="id27">
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="guard" x="118" y="-136">pos == MAIN_POS</label>
			<label kind="synchronisation" x="161" y="-153">STMT!</label>
			<label kind="assignment" x="110" y="-119">DAMAGE_TO_MT = damage</label>
			<nail x="110" y="-153"/>
			<nail x="101" y="-102"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">mainTower</name>
		<parameter>int life</parameter>
		<declaration>void decDamage()
    {
        life = life - DAMAGE_TO_MT;   
    }</declaration>
		<location id="id28" x="-1113" y="-578" color="#00ff00">
		</location>
		<init ref="id28"/>
		<transition id="id29">
			<source ref="id28"/>
			<target ref="id28"/>
			<label kind="guard" x="-1265" y="-611">life&gt;0</label>
			<label kind="synchronisation" x="-1257" y="-594">STMT?</label>
			<label kind="assignment" x="-1282" y="-577">decDamage()</label>
			<nail x="-1164" y="-527"/>
			<nail x="-1173" y="-544"/>
			<nail x="-1173" y="-612"/>
		</transition>
		<transition id="id30">
			<source ref="id28"/>
			<target ref="id28"/>
			<label kind="guard" x="-1054" y="-595">life &lt;= 0</label>
			<label kind="synchronisation" x="-1045" y="-578">STMT?</label>
			<nail x="-1062" y="-595"/>
			<nail x="-1054" y="-535"/>
		</transition>
	</template>
	<system>circle(const int id) = enemy(id, CIRCLE.speed, CIRCLE.health, CIRCLE.damage, false);
square(const int id) = enemy(id, SQUARE.speed, SQUARE.health, SQUARE.damage, true);
basic(const int id, const Cell pos) = turret(id, pos, 2, 2, 2);
cannon(const int id, const Cell pos) = turret(id, pos, 1, 7, 5);
sniper(const int id, const Cell pos) = turret(id, pos, 4, 20, 8);

en0 = circle(0);
en1 = square(1);
//en2 = circle(0);
//en3 = square(1);
es = enemySync();
mt = mainTower(MT.health);
t0 = basic(0, TURRET0_POS);



system en0, en1, /*en2, en3*/mt, es, t0;




</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
